import math
import time

from seed import getSeed
from isaac import isaacGivenSeed
from xorshift import xorshiftGivenSeed
from millerRabin import millerRabinIsaac, millerRabinXorshift
from fermat import fermatIsaac, fermatXorshift

# Testing PRNGs (Xorshift and ISAAC), both receive the same seed
# n-bits in the random number
# final execution time is the medium time of 10 function calls
def runPRNGs(n):
    isaacTime = 0
    xorshiftTime = 0
    for _ in range(10):
        s = getSeed(math.ceil(n/32))

        startTime = time.time()
        nIsaac = isaacGivenSeed(n, s)
        isaacTime += time.time() - startTime

        startTime = time.time()
        nXorshift = xorshiftGivenSeed(n, s)
        xorshiftTime += time.time() - startTime
    
    print("    ISAAC    | "+str(nIsaac)+" ~"+str(isaacTime/10))
    print("    Xorshift | "+str(nXorshift)+" ~"+str(xorshiftTime/10))

# Makes all tests for the PRNGs
def testPRNGs():
    bitSizes = [40, 56, 80, 128, 168, 224, 256, 512, 1024, 2048, 4096]
    for n in bitSizes:
        print("Testing PRNGs for "+str(n)+"-bits numbers")
        runPRNGs(n)
        print()

def testTimeToDefinePossiblePrime():
    bitSizes = [40, 56, 80, 128, 168, 224, 256, 512, 1024, 2048, 4096]
    isaacPRN = [
        2295518576109,
        32258815861338773,
        2352386856143137597474875,
        4065009399373835010924261585601,
        2304686963471389482361223545815337091941418748073491,
        1033670344146166134521375174063731983834109164613717623866801,
        374283546632120446512093845788388127500530562863738980371563133186051,
        24237050593152219329378104910629271337766327861042485100327302089260723245171261031045243209700791511343111434434570013672703258136113658226177753771,
        14688390032191428576112566941287433539225234235113588036482635040810395412080233829400162034902023367640750217579596502429946860402027637228509081533761042826303360530175935158340415113051260011002135695188306512484732752988313703818093358174803994043741122083189625222278501464399587200537737537530576621,
        286184513542132146013874737742906038794373256062228036912983196887903389436353130809590223051861906196523858313916005026691519391382627301862710822179158932432996007083296260560799324874327111199729281262577853605610187999024047477527307827054510293789321945782684354525254337504428832934252351189197113711051078643296054366137909466111961763752229530579267868777422664615094286940253608207257194284502718378634384097150041849091095509993603242650369767837612555803111131708298942484311251781305834258982326412109935316206383089049690667293789561733136320287956673429152710841514968214660862083120559111015761917541,
        1479522529335172247426254273482545966431223433016616722504101938226663880664109234920170101358030314027086382463672825278109785317239443973387059432400402354827808132893650058665404204747911144628106858536544282274572242070493959399784838851873813966912112369475128415369708914596150498855098331333656656372673908170396565898511085690057613130885710776118040611318493783114362388311333189220788766848558352283147732876135877389855606798369729896542536934781611854631381839139739093172041489873325485448241402821884536559373973844276064187200074215860981711763150971188497630811268671101201282912494081840582628751103217944364186880285235210034264599071351499393179812688125123339346017141797126794993714050880156317024926374303214230759310156119377115752691592264370270350897057734740780472856817917142253617475083995116666035715214467699664331324982972139603769825270414919313344673797023282375047023017451479824867006973812578903456254661725355785151287751223251148823032183780121730416728991900473531543860245929191061522933095914133124541981972798399921110582322222917451073122228320388267445419464247091662984649202048111227507546113212721358111878629021867022922715516797225568526223152076721422939372577516456422273090830029857311
    ]
    print("====================")
    print("ISAAC")
    for i in range(len(isaacPRN)):
        print(bitSizes[i])
        startTime = time.time()
        rMillerRabin = millerRabinIsaac(isaacPRN[i])
        millerRabinTime = time.time() - startTime
        print("    Miller-Rabin | "+str(rMillerRabin)+" ~"+str(millerRabinTime))
        startTime = time.time()
        rFermat = fermatIsaac(isaacPRN[i])
        fermatTime = time.time() - startTime
        print("    Fermat       | "+str(rFermat)+" ~"+str(fermatTime))
    
    xorshiftPRN = [
        2208103833431,
        980767734953895,
        4108116362298415217076927,
        83921160333822241129907601551,
        42822365371109283411341453584425556513252574778073283,
        3164038506157802109415995173011980793349121778763211477134591,
        3524539786326418789327075973996142813881774282343261501492338372206551,
        34419850934670605540995806537113151412243307475397956013631764408222385363982135504770225873644064857219896977652983776210365185643384233316689991,
        16174464932599360570173022470714749513716878697224120579133172925612309877714677837313676776687147860803141480230637766003760493663010801609222936349895929940315385921047935122099221849124938662264042209340782875167924639112023744303543252938535033147197561596410554354631964329780300791720626481,
        56932993639761095902614290739149202822659440572208122178895215574124070749291195392506347053606634174013222423229113314521908114840546393667190421194849831739577541485114251102039424637220702125871893912246775021239700585417249561652148357110342006524441304183094268289134109477399720719161682309305430315759365375721738237369459030188308822693325475382345250118641413841416764829192562230342823415051994275806193485925097230486863066323384764792343746589823734672961137564002526830820296719209014276592706673607214217200402789449761411585965931392847396702266337716320211044118226350763258310327734327366755081,

    ]
    print("====================")
    print("Xorshift")
    for i in range(len(xorshiftPRN)):
        print(bitSizes[i])
        startTime = time.time()
        rMillerRabin = millerRabinXorshift(xorshiftPRN[i])
        millerRabinTime = time.time() - startTime
        print("    Miller-Rabin | "+str(rMillerRabin)+" ~"+str(millerRabinTime))
        startTime = time.time()
        rFermat = fermatXorshift(xorshiftPRN[i])
        fermatTime = time.time() - startTime
        print("    Fermat       | "+str(rFermat)+" ~"+str(fermatTime))

testTimeToDefinePossiblePrime()
